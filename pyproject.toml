[project]
name = "home_infra"
version = "0.0.0"
description = "â€¦"
readme = "README.md"
authors = [{name = "Scott Hyndman", email = "scotty.hyndman@gmail.com"}]
requires-python = ">=3.11"
dependencies = [
    "pyinfra>=3.2",
]
license = {text = "MIT"}

[project.urls]
repository = "https://github.com/shyndman/home_infra"
"Bug Tracker" = "https://github.com/shyndman/home_infra/issues"

[project.scripts]
home_infra = "home_infra:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/home_infra"]

[tool.pyright]
include = ["src", "tests"]
exclude = [
    "**/node_modules",
    "**/__pycache__",
]
# Virtual environment configuration
venvPath = "."
venv = ".venv"
# Python version and type checking settings
pythonVersion = "3.11"
typeCheckingMode = "strict"
# Diagnostic settings
reportMissingTypeStubs = "warning"
reportUnknownMemberType = "warning"
reportUnknownParameterType = "warning"
reportUnknownVariableType = "warning"
reportUnknownArgumentType = "warning"
reportPrivateUsage = "warning"
reportUntypedFunctionDecorator = "warning"
reportMissingTypeArgument = "warning"
reportInvalidTypeVarUse = "warning"
reportUnnecessaryTypeIgnoreComment = "information"

[dependency-groups]
dev = [
    "pyright>=1.1.399",
    "pytest>=8.3.5",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.14.0",
    "pytest-xdist>=3.6.1",
    "ruff>=0.3.0",
]

[tool.pytest.ini_options]
# Test discovery settings
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

# Display settings
addopts = "-v"

# Test execution settings
log_cli = true  # Enable live logging
log_cli_level = "INFO"  # Set log level for CLI output

# Test selection settings
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# Test output settings
junit_family = "xunit2"  # Use xunit2 format for JUnit XML files

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/.venv/*",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",

    # Don't complain about pragma no cover lines
    "pragma: no cover",
]
ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "W"]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["home_infra"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
